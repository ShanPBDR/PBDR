<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\pbdr.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\pbdr.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Thu Dec 08 15:28:56 2016
<BR><P>
<H3>Maximum Stack Usage =       4012 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; sensor_BMI160_init &rArr; bmi160_initialize_sensor &rArr; bmi160_config_running_mode &rArr; bmi160_read_fifo_header_data &rArr; bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[86]">printdec</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[86]">printdec</a><BR>
 <LI><a href="#[85]">printbin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85]">printbin</a><BR>
 <LI><a href="#[84]">printhex</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[84]">printhex</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5]">BusFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[20]">CAN1_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[21]">CAN1_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1e]">CAN1_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4c]">CAN2_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4d]">CAN2_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4a]">CAN2_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5a]">CRYP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[59]">DCMI_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1c]">DMA1_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3a]">DMA1_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[51]">DMA2_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[48]">ETH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[49]">ETH_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[33]">EXTI15_10_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[22]">EXTI9_5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[f]">FLASH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5c]">FPU_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3b]">FSMC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5b]">HASH_RNG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2b]">I2C1_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2a]">I2C1_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2d]">I2C2_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2c]">I2C2_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[54]">I2C3_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[53]">I2C3_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4]">MemManage_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4e]">OTG_FS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[35]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[58]">OTG_HS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[c]">PVD_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[10]">RCC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[34]">RTC_Alarm_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[e]">RTC_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3c]">SDIO_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2f]">SPI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3e]">SPI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5e]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[d]">TAMP_STAMP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[23]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[26]">TIM1_CC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[25]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[24]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[27]">TIM2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[28]">TIM3_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[29]">TIM4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3d]">TIM5_IRQHandler</a> from timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[41]">TIM6_DAC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[42]">TIM7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[36]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[39]">TIM8_CC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[38]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[37]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[40]">UART5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from usart2.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[32]">USART3_IRQHandler</a> from usart3.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[52]">USART6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[6]">UsageFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[60]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0snprintf)
 <LI><a href="#[61]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[16b]">bmi160_delay_ms</a> from bmi160_support.o(.text) referenced from bmi160_support.o(.text)
 <LI><a href="#[16c]">bmi160_spi_bus_read</a> from bmi160_support.o(.text) referenced from bmi160_support.o(.text)
 <LI><a href="#[170]">bmi160_spi_bus_write</a> from bmi160_support.o(.text) referenced from bmi160_support.o(.text)
 <LI><a href="#[5d]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[293]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[62]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[27b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[294]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[295]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[296]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[297]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[298]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[299]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[da]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>

<P><STRONG><a name="[19d]"></a>NVIC_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[29a]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[29b]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>

<P><STRONG><a name="[66]"></a>GPIO_DeInit</STRONG> (Thumb, 268 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[d6]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Configuration
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[29c]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>GPIO_ReadInputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[2a0]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMultData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadReg
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadLsm6ds33DevID
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMpu6500DevID
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadAk8975DevID
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadBmi160DevID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_spi_bus_read
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Configuration
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>

<P><STRONG><a name="[d8]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMultData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadReg
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadLsm6ds33DevID
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMpu6500DevID
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadAk8975DevID
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadBmi160DevID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_spi_bus_read
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Configuration
</UL>

<P><STRONG><a name="[2a1]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[2a2]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
</UL>

<P><STRONG><a name="[191]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[2a3]"></a>RCC_DeInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2a4]"></a>RCC_HSEConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[68]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[2a5]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2a6]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2a7]"></a>RCC_LSEConfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2a8]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2a9]"></a>RCC_PLLConfig</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ab]"></a>RCC_PLLI2SConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ac]"></a>RCC_PLLI2SCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ad]"></a>RCC_PLLSAIConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ae]"></a>RCC_PLLSAICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2af]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>RCC_MCO1Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b1]"></a>RCC_MCO2Config</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b3]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b4]"></a>RCC_HCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b5]"></a>RCC_PCLK1Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b6]"></a>RCC_PCLK2Config</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 222 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b7]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2b9]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2bb]"></a>RCC_SAIPLLI2SClkDivConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2bc]"></a>RCC_SAIPLLSAIClkDivConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2bd]"></a>RCC_SAIBlockACLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2be]"></a>RCC_SAIBlockBCLKConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2bf]"></a>RCC_LTDCCLKDivConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c0]"></a>RCC_TIMCLKPresConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Configuration
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[2c1]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c2]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[19a]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Int_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[dc]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
</UL>

<P><STRONG><a name="[67]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[2c3]"></a>RCC_AHB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>RCC_AHB3PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[6b]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[2c5]"></a>RCC_AHB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c6]"></a>RCC_AHB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c7]"></a>RCC_AHB3PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c8]"></a>RCC_APB1PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2c9]"></a>RCC_APB2PeriphClockLPModeCmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>RCC_LSEModeConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2cb]"></a>RCC_ITConfig</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2cc]"></a>RCC_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2cd]"></a>RCC_GetITStatus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[2ce]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
</UL>

<P><STRONG><a name="[193]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
</UL>

<P><STRONG><a name="[2cf]"></a>I2S_Init</STRONG> (Thumb, 392 bytes, Stack size 36 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d0]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d1]"></a>I2S_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[192]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
</UL>

<P><STRONG><a name="[2d2]"></a>I2S_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d3]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d4]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d5]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d6]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d7]"></a>SPI_TIModeCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d8]"></a>I2S_FullDuplexConfig</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2d9]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2da]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2db]"></a>SPI_CalculateCRC</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2dc]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2dd]"></a>SPI_GetCRC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2de]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2df]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2e0]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2e1]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2e2]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2e3]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2e4]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>TIM_DeInit</STRONG> (Thumb, 346 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Int_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[19b]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Int_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[2e5]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e6]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e7]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e8]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2e9]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[eb]"></a>TIM_GetCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayUs
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromBMI160
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[2ea]"></a>TIM_GetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2eb]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ec]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ed]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ee]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ef]"></a>TIM_SetClockDivision</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[19e]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Int_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[2f0]"></a>TIM_OC1Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f1]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f2]"></a>TIM_OC3Init</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f3]"></a>TIM_OC4Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f4]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f5]"></a>TIM_SelectOCxM</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f6]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f7]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f8]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2f9]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fa]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fb]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fc]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fd]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2fe]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[2ff]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[300]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[301]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[302]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[303]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[304]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[305]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[306]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[307]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[308]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[309]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[30a]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[30b]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[30c]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[30d]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[30e]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[30f]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[310]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[311]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[312]"></a>TIM_CCxNCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[74]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[72]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[70]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[6e]"></a>TIM_ICInit</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_ICInit &rArr; TI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
</UL>

<P><STRONG><a name="[313]"></a>TIM_ICStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>TIM_PWMIConfig</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[314]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[315]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[316]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1a4]"></a>TIM_GetCapture4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_capture
</UL>

<P><STRONG><a name="[317]"></a>TIM_BDTRConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[318]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[319]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[31a]"></a>TIM_SelectCOM</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[31b]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[19c]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
</UL>

<P><STRONG><a name="[31c]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_capture
</UL>

<P><STRONG><a name="[1a3]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_capture
</UL>

<P><STRONG><a name="[19f]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[1a0]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[31d]"></a>TIM_DMAConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[31e]"></a>TIM_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[31f]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[320]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[78]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[7a]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[7c]"></a>TIM_ETRConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[7b]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[7d]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 32 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[321]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[322]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[323]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[324]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[325]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[326]"></a>TIM_RemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>USART_DeInit</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[7f]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[327]"></a>USART_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[328]"></a>USART_ClockInit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[329]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1a7]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[32a]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[32b]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[32c]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendByte
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[1ab]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[32d]"></a>USART_SetAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[32e]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[32f]"></a>USART_WakeUpConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[330]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[331]"></a>USART_LINCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[332]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[333]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[334]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[335]"></a>USART_SmartCardCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[336]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[337]"></a>USART_IrDAConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[338]"></a>USART_IrDACmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[339]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_EnableTxE
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_WrByteUnlocked
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByteUnlocked
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[1aa]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendByte
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[1a8]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>

<P><STRONG><a name="[1ac]"></a>USART_GetITStatus</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[1ad]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>print</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, print.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_init
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
</UL>

<P><STRONG><a name="[81]"></a>printch</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = printch &rArr; BSP_Uart2_WrByte &rArr; BSP_Uart2_WrByteUnlocked &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByte
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
</UL>

<P><STRONG><a name="[83]"></a>printstr</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = printstr &rArr; printch &rArr; BSP_Uart2_WrByte &rArr; BSP_Uart2_WrByteUnlocked &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
</UL>

<P><STRONG><a name="[84]"></a>printhex</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = printhex &rArr;  printhex (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
</UL>

<P><STRONG><a name="[85]"></a>printbin</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + In Cycle
<LI>Call Chain = printbin &rArr;  printbin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
</UL>

<P><STRONG><a name="[86]"></a>printdec</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
</UL>

<P><STRONG><a name="[87]"></a>printflt</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
</UL>

<P><STRONG><a name="[8c]"></a>data_Output</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, print.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printdec
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printbin
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printstr
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_SNSR21_Output
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS13_Output
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS6_Output
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_GGA_Output
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_RMC_Output
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_Nav_Output
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[8d]"></a>pb_Gluelayer_External_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, pb_gluelayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Gluelayer_External_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[bc]"></a>Msg_Get_ExternalGnssEnrichedFix</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_gluelayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_CLK
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
</UL>

<P><STRONG><a name="[b5]"></a>Msg_Get_ExternalGnssGpsTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_gluelayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navgpstime
</UL>

<P><STRONG><a name="[ba]"></a>Msg_Get_ExternalGnssAuxMeas</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_gluelayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navsat
</UL>

<P><STRONG><a name="[d1]"></a>Msg_Get_ExternalGNSS_RawChan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_gluelayer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
</UL>

<P><STRONG><a name="[d0]"></a>Msg_Get_CycleSlip</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_gluelayer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
</UL>

<P><STRONG><a name="[f6]"></a>Msg_Get_ExternalDRSensor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_gluelayer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
</UL>

<P><STRONG><a name="[90]"></a>Msg_UTC2GpsTime</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, pb_gluelayer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Msg_UTC2GpsTime
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
</UL>

<P><STRONG><a name="[93]"></a>ConvertGPSToUnixTime</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, pb_gluelayer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[98]"></a>pb_SocketMsg_Nav_Output</STRONG> (Thumb, 216 bytes, Stack size 648 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = pb_SocketMsg_Nav_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_io_InfoOutput
</UL>

<P><STRONG><a name="[9a]"></a>pb_AddNMEACheckSum</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pb_AddNMEACheckSum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_GGA_Output
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_RMC_Output
</UL>

<P><STRONG><a name="[9c]"></a>pb_NMEA_RMC_Output</STRONG> (Thumb, 86 bytes, Stack size 144 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = pb_NMEA_RMC_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_AddNMEACheckSum
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
</UL>

<P><STRONG><a name="[9d]"></a>pb_NMEA_GGA_Output</STRONG> (Thumb, 134 bytes, Stack size 168 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pb_NMEA_GGA_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_AddNMEACheckSum
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
</UL>

<P><STRONG><a name="[9e]"></a>pb_NMEA_Output</STRONG> (Thumb, 1626 bytes, Stack size 232 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = pb_NMEA_Output &rArr; pb_NMEA_GGA_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_GGA_Output
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_RMC_Output
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_io_InfoOutput
</UL>

<P><STRONG><a name="[a3]"></a>pb_io_InfoOutput</STRONG> (Thumb, 44 bytes, Stack size 128 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 944<LI>Call Chain = pb_io_InfoOutput &rArr; pb_SocketMsg_Nav_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Query_OutputNavigationState
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_Nav_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
</UL>

<P><STRONG><a name="[a5]"></a>pbMsg_ConvertGPSToUnixTime</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pbMsg_ConvertGPSToUnixTime &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
</UL>

<P><STRONG><a name="[a6]"></a>pb_SocketMsg_BlkEnd_Output</STRONG> (Thumb, 134 bytes, Stack size 208 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = pb_SocketMsg_BlkEnd_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Query_OutputNavigationState
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbMsg_ConvertGPSToUnixTime
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
</UL>

<P><STRONG><a name="[a7]"></a>pb_SocketMsg_GNSS6_Output</STRONG> (Thumb, 274 bytes, Stack size 312 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = pb_SocketMsg_GNSS6_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
</UL>

<P><STRONG><a name="[a8]"></a>pb_SocketMsg_GNSS13_Output</STRONG> (Thumb, 192 bytes, Stack size 144 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = pb_SocketMsg_GNSS13_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
</UL>

<P><STRONG><a name="[a9]"></a>pb_SocketMsg_SNSR21_Output</STRONG> (Thumb, 142 bytes, Stack size 664 bytes, pb_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 832<LI>Call Chain = pb_SocketMsg_SNSR21_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
</UL>

<P><STRONG><a name="[ab]"></a>ubx_setCheckSum</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ubx_setCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_cfg
</UL>

<P><STRONG><a name="[c8]"></a>ubx_ComputeCheckSum</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ubx_ComputeCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>

<P><STRONG><a name="[aa]"></a>generate_cfg</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = generate_cfg &rArr; ubx_setCheckSum
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ubx_setCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
</UL>

<P><STRONG><a name="[ac]"></a>ublox_cfg_in_init</STRONG> (Thumb, 2244 bytes, Stack size 256 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = ublox_cfg_in_init &rArr; BSP_Uart3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendBuff
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_cfg
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[1b6]"></a>uart_send_cfgCmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>init_ubxraw</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = init_ubxraw
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[f4]"></a>Flag_Get_UbxDataReady</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_int
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[b3]"></a>Buff_clr_UbxData</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buff_clr_UbxData
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[1b5]"></a>Receive_GpsData_byte</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[b4]"></a>decode_navgpstime</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = decode_navgpstime &rArr; I2
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U4
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssGpsTime
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>

<P><STRONG><a name="[b9]"></a>decode_navsat</STRONG> (Thumb, 1224 bytes, Stack size 744 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = decode_navsat &rArr; I2
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U4
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssAuxMeas
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>

<P><STRONG><a name="[bb]"></a>pb_Set_ExternalUbxGNSS_COV</STRONG> (Thumb, 644 bytes, Stack size 48 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pb_Set_ExternalUbxGNSS_COV &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssEnrichedFix
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navcov
</UL>

<P><STRONG><a name="[be]"></a>decode_navcov</STRONG> (Thumb, 528 bytes, Stack size 80 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = decode_navcov &rArr; pb_Set_ExternalUbxGNSS_COV &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R4
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U4
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>

<P><STRONG><a name="[c0]"></a>pb_Set_ExternalUbxGNSS_CLK</STRONG> (Thumb, 300 bytes, Stack size 56 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pb_Set_ExternalUbxGNSS_CLK &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssEnrichedFix
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navclock
</UL>

<P><STRONG><a name="[c1]"></a>decode_navclock</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = decode_navclock &rArr; pb_Set_ExternalUbxGNSS_CLK &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U4
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_CLK
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>

<P><STRONG><a name="[c3]"></a>pb_Get_PPSValidation</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Validate_Ubx_PPS
</UL>

<P><STRONG><a name="[c2]"></a>pb_Validate_Ubx_PPS</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Validate_Ubx_PPS
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_PPSValidation
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
</UL>

<P><STRONG><a name="[c4]"></a>pb_Set_ExternalUbxGNSS_PVT</STRONG> (Thumb, 782 bytes, Stack size 72 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = pb_Set_ExternalUbxGNSS_PVT &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_UTC2GpsTime
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssEnrichedFix
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
</UL>

<P><STRONG><a name="[c5]"></a>decode_navpvt</STRONG> (Thumb, 304 bytes, Stack size 104 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = decode_navpvt &rArr; pb_Set_ExternalUbxGNSS_PVT &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I4
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U4
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U2
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Validate_Ubx_PPS
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>

<P><STRONG><a name="[c7]"></a>decode_ubx</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = decode_ubx &rArr; decode_navsat &rArr; I2
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navclock
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navcov
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navsat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navgpstime
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ubx_ComputeCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode_UbxData
</UL>

<P><STRONG><a name="[c9]"></a>Decode_UbxData</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = Decode_UbxData &rArr; decode_ubx &rArr; decode_navsat &rArr; I2
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_ubx
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_GpsDataInHandler
</UL>

<P><STRONG><a name="[ce]"></a>Receive_UbxData_byte</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Receive_UbxData_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_GpsDataInHandler
</UL>

<P><STRONG><a name="[cb]"></a>sync_ubx</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_ubx
</UL>

<P><STRONG><a name="[ca]"></a>input_ubx</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = input_ubx &rArr; U2
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U2
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_ubx
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_GpsDataInHandler
</UL>

<P><STRONG><a name="[cd]"></a>Process_GpsDataInHandler</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = Process_GpsDataInHandler &rArr; Decode_UbxData &rArr; decode_ubx &rArr; decode_navsat &rArr; I2
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_ubx
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_UbxData_byte
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decode_UbxData
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[cf]"></a>decode_rxmrawx</STRONG> (Thumb, 1380 bytes, Stack size 1384 bytes, ubx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R8
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;R4
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U2
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_CycleSlip
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGNSS_RawChan
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[d4]"></a>LED_Configuration</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LED_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>main</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4012<LI>Call Chain = main &rArr; sensor_BMI160_init &rArr; bmi160_initialize_sensor &rArr; bmi160_config_running_mode &rArr; bmi160_read_fifo_header_data &rArr; bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_Configuration
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_BMI160_init
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_Int_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_Int_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_Init
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Configuration
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSetupHardware
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[65]"></a>TimingDelay_Decrement</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[e6]"></a>LED_Toggle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Running_LED_int
</UL>

<P><STRONG><a name="[e8]"></a>Running_LED_int</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Running_LED_int &rArr; LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[df]"></a>sensor_BMI160_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4012<LI>Call Chain = sensor_BMI160_init &rArr; bmi160_initialize_sensor &rArr; bmi160_config_running_mode &rArr; bmi160_read_fifo_header_data &rArr; bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ea]"></a>getDataFromBMI160</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getDataFromBMI160 &rArr; bmi160_read_sensor_data &rArr; bmi160_get_sensor_time
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_sensor_data
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>pb_FirmWare_Version_Info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[ed]"></a>DRSystemOpen</STRONG> (Thumb, 106 bytes, Stack size 344 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1104<LI>Call Chain = DRSystemOpen &rArr; pb_System_Init &rArr; pb_Load_NvmData_Init &rArr; pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Gluelayer_External_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Version_Info
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_System_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_OutputNavigationState
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_NvmData
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_FirmWare_Version_Info
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ubxraw
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_init
</UL>

<P><STRONG><a name="[e0]"></a>DataHandler_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = DataHandler_init &rArr; DRSystemOpen &rArr; pb_System_Init &rArr; pb_Load_NvmData_Init &rArr; pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>DataHandler_int</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DataHandler_int
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flag_Get_UbxDataReady
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[f7]"></a>DataOutput</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = DataOutput &rArr; pb_io_InfoOutput &rArr; pb_SocketMsg_Nav_Output &rArr; data_Output &rArr; printflt &rArr; printdec &rArr;  printdec (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_SNSR21_Output
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS13_Output
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS6_Output
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_io_InfoOutput
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssAuxMeas
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssEnrichedFix
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[f8]"></a>pbDR_Push_DataBuffer</STRONG> (Thumb, 298 bytes, Stack size 536 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = pbDR_Push_DataBuffer &rArr; pb_Extrapolate_ExternalGNSSFix &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalDRSensor
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssAuxMeas
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalGnssEnrichedFix
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_Output
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SoftwareLicense
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_External_DR_SensrorData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Sorting_DRData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[e5]"></a>DataHandler_main</STRONG> (Thumb, 1412 bytes, Stack size 56 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1536<LI>Call Chain = DataHandler_main &rArr; pb_DR_Main_external &rArr; pb_DR_Main &rArr; pb_Navigation &rArr; pb_DR_Navigation &rArr; pb_DR_Solution &rArr; pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main_external
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataOutput
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_GpsDataInHandler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buff_clr_UbxData
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flag_Get_UbxDataReady
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[173]"></a>bmi160_sec</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_bandwidth
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_bandwidth
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_rate
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_rate
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_mode
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_mode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_sensor_data
</UL>

<P><STRONG><a name="[101]"></a>bmi160_write_reg</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_step_detector_intr
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_significant_motion_intr
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_unmap_significant_motion_intr
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_init
</UL>

<P><STRONG><a name="[100]"></a>bmi160_init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bmi160_init &rArr; bmi160_write_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
</UL>

<P><STRONG><a name="[103]"></a>bmi160_read_reg</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_calib_values
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_calib_values
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bst_akm_sensitivity_data
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_wakeup
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bmm150_mag_trim
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_headerless_mode_user_defined_length
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_step_detector_intr
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_significant_motion_intr
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_unmap_significant_motion_intr
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
</UL>

<P><STRONG><a name="[33a]"></a>bmi160_get_fatal_err</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[33b]"></a>bmi160_get_err_code</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[33c]"></a>bmi160_get_i2c_fail_err</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>bmi160_get_drop_cmd_err</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[33e]"></a>bmi160_get_mag_dada_rdy_err</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[33f]"></a>bmi160_get_error_status</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[105]"></a>bmi160_get_mag_power_mode_stat</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_mag_power_mode_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
</UL>

<P><STRONG><a name="[340]"></a>bmi160_get_gyro_power_mode_stat</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[341]"></a>bmi160_get_accel_power_mode_stat</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[102]"></a>bmi160_set_command_register</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bmi160_set_command_register &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_mode
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bst_akm_and_secondary_if_powermode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_and_secondary_if_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_clear_step_counter
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_foc_gyro_enable
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_accel_foc_trigger_xyz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_foc_trigger
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
</UL>

<P><STRONG><a name="[104]"></a>bmi160_set_mag_interface_normal</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bmi160_set_mag_interface_normal &rArr; bmi160_set_command_register &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_mag_power_mode_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bst_akm_and_secondary_if_powermode
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_and_secondary_if_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[342]"></a>bmi160_read_mag_x</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[343]"></a>bmi160_read_mag_y</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[344]"></a>bmi160_read_mag_z</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[345]"></a>bmi160_read_mag_r</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>bmi160_read_mag_xyz</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_xyz
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_xyz
</UL>

<P><STRONG><a name="[144]"></a>bmi160_read_mag_xyzr</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_xyz
</UL>

<P><STRONG><a name="[346]"></a>bmi160_read_gyro_x</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[347]"></a>bmi160_read_gyro_y</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[348]"></a>bmi160_read_gyro_z</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>bmi160_read_gyro_xyz</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_read_gyro_xyz
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_sensor_data
</UL>

<P><STRONG><a name="[349]"></a>bmi160_read_accel_x</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[34a]"></a>bmi160_read_accel_y</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[34b]"></a>bmi160_read_accel_z</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>bmi160_read_accel_xyz</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_read_accel_xyz
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_sensor_data
</UL>

<P><STRONG><a name="[17c]"></a>bmi160_get_sensor_time</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_sensor_time
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_sensor_data
</UL>

<P><STRONG><a name="[34c]"></a>bmi160_get_gyro_selftest</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[34d]"></a>bmi160_get_mag_manual_operation_stat</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[116]"></a>bmi160_get_foc_rdy</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_foc_gyro_enable
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_accel_foc_trigger_xyz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_foc_trigger
</UL>

<P><STRONG><a name="[34e]"></a>bmi160_get_nvm_rdy</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[34f]"></a>bmi160_get_data_rdy_mag</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[350]"></a>bmi160_get_gyro_data_rdy</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[351]"></a>bmi160_get_accel_data_rdy</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[352]"></a>bmi160_get_stat0_step_intr</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[353]"></a>bmi160_get_stat0_significant_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[354]"></a>bmi160_get_stat0_any_motion_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[355]"></a>bmi160_get_stat0_pmu_trigger_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[356]"></a>bmi160_get_stat0_double_tap_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[357]"></a>bmi160_get_stat0_single_tap_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[358]"></a>bmi160_get_stat0_orient_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[359]"></a>bmi160_get_stat0_flat_intr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[35a]"></a>bmi160_get_stat1_high_g_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[35b]"></a>bmi160_get_stat1_low_g_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[35c]"></a>bmi160_get_stat1_data_rdy_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[35d]"></a>bmi160_get_stat1_fifo_full_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[35e]"></a>bmi160_get_stat1_fifo_wm_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[35f]"></a>bmi160_get_stat1_nomotion_intr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[360]"></a>bmi160_get_stat2_any_motion_first_x</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[361]"></a>bmi160_get_stat2_any_motion_first_y</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[362]"></a>bmi160_get_stat2_any_motion_first_z</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[363]"></a>bmi160_get_stat2_any_motion_sign</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[364]"></a>bmi160_get_stat2_tap_first_x</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[365]"></a>bmi160_get_stat2_tap_first_y</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[366]"></a>bmi160_get_stat2_tap_first_z</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[367]"></a>bmi160_get_stat2_tap_sign</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[368]"></a>bmi160_get_stat3_high_g_first_x</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[369]"></a>bmi160_get_stat3_high_g_first_y</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[36a]"></a>bmi160_get_stat3_high_g_first_z</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[36b]"></a>bmi160_get_stat3_high_g_sign</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[36c]"></a>bmi160_get_stat3_orient_xy</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[36d]"></a>bmi160_get_stat3_orient_z</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>bmi160_get_stat3_flat</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[36f]"></a>bmi160_get_temp</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[370]"></a>bmi160_fifo_length</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>bmi160_fifo_data</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_fifo_data
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_headerless_mode_user_defined_length
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_header_data_user_defined_length
</UL>

<P><STRONG><a name="[371]"></a>bmi160_get_accel_output_data_rate</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>bmi160_set_accel_under_sampling_parameter</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_accel_under_sampling_parameter
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_output_data_rate
</UL>

<P><STRONG><a name="[106]"></a>bmi160_set_accel_output_data_rate</STRONG> (Thumb, 442 bytes, Stack size 32 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bmi160_set_accel_output_data_rate &rArr; bmi160_set_accel_under_sampling_parameter
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_under_sampling_parameter
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_rate
</UL>

<P><STRONG><a name="[372]"></a>bmi160_get_accel_bw</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>bmi160_set_accel_bw</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_accel_bw
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_bandwidth
</UL>

<P><STRONG><a name="[373]"></a>bmi160_get_accel_under_sampling_parameter</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[374]"></a>bmi160_get_accel_range</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[189]"></a>bmi160_set_accel_range</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_accel_range
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[375]"></a>bmi160_get_gyro_output_data_rate</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>bmi160_set_gyro_output_data_rate</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_output_data_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_rate
</UL>

<P><STRONG><a name="[376]"></a>bmi160_get_gyro_bw</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[179]"></a>bmi160_set_gyro_bw</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_bw
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_bandwidth
</UL>

<P><STRONG><a name="[377]"></a>bmi160_get_gyro_range</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[18a]"></a>bmi160_set_gyro_range</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_range
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[378]"></a>bmi160_get_mag_output_data_rate</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[154]"></a>bmi160_set_mag_output_data_rate</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_mag_output_data_rate
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[379]"></a>bmi160_get_fifo_down_gyro</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[37a]"></a>bmi160_set_fifo_down_gyro</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[37b]"></a>bmi160_get_gyro_fifo_filter_data</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[37c]"></a>bmi160_set_gyro_fifo_filter_data</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[37d]"></a>bmi160_get_fifo_down_accel</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[37e]"></a>bmi160_set_fifo_down_accel</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[37f]"></a>bmi160_get_accel_fifo_filter_data</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[380]"></a>bmi160_set_accel_fifo_filter_data</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[381]"></a>bmi160_get_fifo_wm</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[188]"></a>bmi160_set_fifo_wm</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bmi160_set_fifo_wm
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[382]"></a>bmi160_get_fifo_time_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>bmi160_set_fifo_time_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_fifo_time_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[383]"></a>bmi160_get_fifo_tag_intr2_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[109]"></a>bmi160_set_input_enable</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_tag_intr1_enable
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_tag_intr2_enable
</UL>

<P><STRONG><a name="[108]"></a>bmi160_set_fifo_tag_intr2_enable</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_input_enable
</UL>

<P><STRONG><a name="[384]"></a>bmi160_get_fifo_tag_intr1_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>bmi160_set_fifo_tag_intr1_enable</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_input_enable
</UL>

<P><STRONG><a name="[385]"></a>bmi160_get_fifo_header_enable</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[141]"></a>bmi160_set_fifo_header_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_fifo_header_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_headerless_mode_user_defined_length
</UL>

<P><STRONG><a name="[386]"></a>bmi160_get_fifo_mag_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[183]"></a>bmi160_set_fifo_mag_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_fifo_mag_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[387]"></a>bmi160_get_fifo_accel_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>bmi160_set_fifo_accel_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_fifo_accel_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[388]"></a>bmi160_get_fifo_gyro_enable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>bmi160_set_fifo_gyro_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_fifo_gyro_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[389]"></a>bmi160_get_i2c_device_addr</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>bmi160_set_i2c_device_addr</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_i2c_device_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[38a]"></a>bmi160_get_mag_burst</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[38b]"></a>bmi160_set_mag_burst</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[38c]"></a>bmi160_get_mag_offset</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[38d]"></a>bmi160_set_mag_offset</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>bmi160_get_mag_manual_enable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[12d]"></a>bmi160_set_mag_manual_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_measure_xyz_data
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas537_acquisition_command_register
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_measurement_xyz_data
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_acquisition_command_register
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_offset
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bst_akm_and_secondary_if_powermode
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_set_powermode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_and_secondary_if_power_mode
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_presetmode
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_fifo_xyz_data
</UL>

<P><STRONG><a name="[38e]"></a>bmi160_get_mag_read_addr</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>bmi160_set_mag_read_addr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bmi160_set_mag_read_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas537_acquisition_command_register
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_calib_values
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_acquisition_command_register
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_calib_values
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bst_akm_and_secondary_if_powermode
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_set_powermode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bst_akm_sensitivity_data
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_wakeup
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bmm150_mag_trim
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_presetmode
</UL>

<P><STRONG><a name="[38f]"></a>bmi160_get_mag_write_addr</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>bmi160_set_mag_write_addr</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bmi160_set_mag_write_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_measure_xyz_data
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas537_acquisition_command_register
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_calib_values
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_measurement_xyz_data
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_acquisition_command_register
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_initial_values
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_offset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_set_powermode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_wakeup
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_presetmode
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_fifo_xyz_data
</UL>

<P><STRONG><a name="[390]"></a>bmi160_get_mag_write_data</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[12e]"></a>bmi160_set_mag_write_data</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bmi160_set_mag_write_data
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_measure_xyz_data
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas537_acquisition_command_register
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_calib_values
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_measurement_xyz_data
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_acquisition_command_register
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_initial_values
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_offset
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_set_powermode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_wakeup
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_presetmode
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_fifo_xyz_data
</UL>

<P><STRONG><a name="[391]"></a>bmi160_get_intr_enable_0</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[18b]"></a>bmi160_set_intr_enable_0</STRONG> (Thumb, 506 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_intr_enable_0
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[392]"></a>bmi160_get_intr_enable_1</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[393]"></a>bmi160_set_intr_enable_1</STRONG> (Thumb, 504 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[394]"></a>bmi160_get_intr_enable_2</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[18c]"></a>bmi160_set_intr_enable_2</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_intr_enable_2
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[10c]"></a>bmi160_get_step_detector_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_step_detector_intr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_low_g
</UL>

<P><STRONG><a name="[10d]"></a>bmi160_set_step_detector_enable</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_step_detector_intr
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_low_g
</UL>

<P><STRONG><a name="[395]"></a>bmi160_get_intr_edge_ctrl</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[396]"></a>bmi160_set_intr_edge_ctrl</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[397]"></a>bmi160_get_intr_level</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>bmi160_set_intr_level</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_intr_level
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_interrupt_configuration
</UL>

<P><STRONG><a name="[398]"></a>bmi160_get_intr_output_type</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[399]"></a>bmi160_set_intr_output_type</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[39a]"></a>bmi160_get_output_enable</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[180]"></a>bmi160_set_output_enable</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_output_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_interrupt_configuration
</UL>

<P><STRONG><a name="[39b]"></a>bmi160_get_latch_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[39c]"></a>bmi160_set_latch_intr</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[39d]"></a>bmi160_get_input_enable</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[39e]"></a>bmi160_get_intr_low_g</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>bmi160_set_step_counter_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_low_g
</UL>

<P><STRONG><a name="[10e]"></a>bmi160_get_step_counter_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_low_g
</UL>

<P><STRONG><a name="[10b]"></a>bmi160_set_intr_low_g</STRONG> (Thumb, 238 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_step_counter_enable
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_step_counter_enable
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_step_detector_enable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_step_detector_enable
</UL>

<P><STRONG><a name="[39f]"></a>bmi160_get_intr_high_g</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a0]"></a>bmi160_set_intr_high_g</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a1]"></a>bmi160_get_intr_any_motion</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[112]"></a>bmi160_set_intr_significant_motion_select</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_significant_motion_intr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_any_motion
</UL>

<P><STRONG><a name="[111]"></a>bmi160_get_intr_significant_motion_select</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_map_significant_motion_intr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_any_motion
</UL>

<P><STRONG><a name="[110]"></a>bmi160_set_intr_any_motion</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_intr_significant_motion_select
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_significant_motion_select
</UL>

<P><STRONG><a name="[3a2]"></a>bmi160_get_intr_nomotion</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a3]"></a>bmi160_set_intr_nomotion</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a4]"></a>bmi160_get_intr_double_tap</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a5]"></a>bmi160_set_intr_double_tap</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a6]"></a>bmi160_get_intr_single_tap</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a7]"></a>bmi160_set_intr_single_tap</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a8]"></a>bmi160_get_intr_orient</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3a9]"></a>bmi160_set_intr_orient</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3aa]"></a>bmi160_get_intr_flat</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ab]"></a>bmi160_set_intr_flat</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ac]"></a>bmi160_get_intr_pmu_trig</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ad]"></a>bmi160_set_intr_pmu_trig</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ae]"></a>bmi160_get_intr_fifo_full</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3af]"></a>bmi160_set_intr_fifo_full</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b0]"></a>bmi160_get_intr_fifo_wm</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>bmi160_set_intr_fifo_wm</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_intr_fifo_wm
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[3b1]"></a>bmi160_get_intr_data_rdy</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b2]"></a>bmi160_set_intr_data_rdy</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b3]"></a>bmi160_get_intr_tap_source</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b4]"></a>bmi160_set_intr_tap_source</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b5]"></a>bmi160_get_intr_low_high_source</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b6]"></a>bmi160_set_intr_low_high_source</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b7]"></a>bmi160_get_intr_motion_source</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b8]"></a>bmi160_set_intr_motion_source</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3b9]"></a>bmi160_get_intr_low_g_durn</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ba]"></a>bmi160_set_intr_low_g_durn</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3bb]"></a>bmi160_get_intr_low_g_thres</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3bc]"></a>bmi160_set_intr_low_g_thres</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3bd]"></a>bmi160_get_intr_low_g_hyst</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3be]"></a>bmi160_set_intr_low_g_hyst</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3bf]"></a>bmi160_get_intr_low_g_mode</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c0]"></a>bmi160_set_intr_low_g_mode</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c1]"></a>bmi160_get_intr_high_g_hyst</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c2]"></a>bmi160_set_intr_high_g_hyst</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c3]"></a>bmi160_get_intr_high_g_durn</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c4]"></a>bmi160_set_intr_high_g_durn</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c5]"></a>bmi160_get_intr_high_g_thres</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c6]"></a>bmi160_set_intr_high_g_thres</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c7]"></a>bmi160_get_intr_any_motion_durn</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c8]"></a>bmi160_set_intr_any_motion_durn</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3c9]"></a>bmi160_get_intr_slow_no_motion_durn</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ca]"></a>bmi160_set_intr_slow_no_motion_durn</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3cb]"></a>bmi160_get_intr_any_motion_thres</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3cc]"></a>bmi160_set_intr_any_motion_thres</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3cd]"></a>bmi160_get_intr_slow_no_motion_thres</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ce]"></a>bmi160_set_intr_slow_no_motion_thres</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3cf]"></a>bmi160_get_intr_slow_no_motion_select</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d0]"></a>bmi160_set_intr_slow_no_motion_select</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[113]"></a>bmi160_unmap_significant_motion_intr</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_write_reg
</UL>

<P><STRONG><a name="[3d1]"></a>bmi160_get_intr_significant_motion_skip</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d2]"></a>bmi160_set_intr_significant_motion_skip</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d3]"></a>bmi160_get_intr_significant_motion_proof</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d4]"></a>bmi160_set_intr_significant_motion_proof</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d5]"></a>bmi160_get_intr_tap_durn</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d6]"></a>bmi160_set_intr_tap_durn</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d7]"></a>bmi160_get_intr_tap_shock</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d8]"></a>bmi160_set_intr_tap_shock</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3d9]"></a>bmi160_get_intr_tap_quiet</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3da]"></a>bmi160_set_intr_tap_quiet</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3db]"></a>bmi160_get_intr_tap_thres</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3dc]"></a>bmi160_set_intr_tap_thres</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3dd]"></a>bmi160_get_intr_orient_mode</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3de]"></a>bmi160_set_intr_orient_mode</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3df]"></a>bmi160_get_intr_orient_blocking</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e0]"></a>bmi160_set_intr_orient_blocking</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e1]"></a>bmi160_get_intr_orient_hyst</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e2]"></a>bmi160_set_intr_orient_hyst</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e3]"></a>bmi160_get_intr_orient_theta</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e4]"></a>bmi160_set_intr_orient_theta</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e5]"></a>bmi160_get_intr_orient_ud_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e6]"></a>bmi160_set_intr_orient_ud_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e7]"></a>bmi160_get_intr_orient_axes_enable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e8]"></a>bmi160_set_intr_orient_axes_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3e9]"></a>bmi160_get_intr_flat_theta</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ea]"></a>bmi160_set_intr_flat_theta</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3eb]"></a>bmi160_get_intr_flat_hold</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ec]"></a>bmi160_set_intr_flat_hold</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ed]"></a>bmi160_get_intr_flat_hyst</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ee]"></a>bmi160_set_intr_flat_hyst</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3ef]"></a>bmi160_get_foc_accel_z</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f0]"></a>bmi160_set_foc_accel_z</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f1]"></a>bmi160_get_foc_accel_y</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f2]"></a>bmi160_set_foc_accel_y</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f3]"></a>bmi160_get_foc_accel_x</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f4]"></a>bmi160_set_foc_accel_x</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[119]"></a>bmi160_get_accel_offset_compensation_zaxis</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_accel_foc_trigger_xyz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_foc_trigger
</UL>

<P><STRONG><a name="[118]"></a>bmi160_get_accel_offset_compensation_yaxis</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_accel_foc_trigger_xyz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_foc_trigger
</UL>

<P><STRONG><a name="[117]"></a>bmi160_get_accel_offset_compensation_xaxis</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_accel_foc_trigger_xyz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_foc_trigger
</UL>

<P><STRONG><a name="[115]"></a>bmi160_set_accel_offset_enable</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_compensation_zaxis
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_compensation_yaxis
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_compensation_xaxis
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_accel_foc_trigger_xyz
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_foc_trigger
</UL>

<P><STRONG><a name="[114]"></a>bmi160_set_accel_foc_trigger</STRONG> (Thumb, 590 bytes, Stack size 48 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_enable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_accel_offset_compensation_xaxis
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_accel_offset_compensation_yaxis
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_accel_offset_compensation_zaxis
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_foc_rdy
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>

<P><STRONG><a name="[11a]"></a>bmi160_accel_foc_trigger_xyz</STRONG> (Thumb, 416 bytes, Stack size 72 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_enable
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_accel_offset_compensation_xaxis
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_accel_offset_compensation_yaxis
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_accel_offset_compensation_zaxis
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_foc_rdy
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>

<P><STRONG><a name="[3f5]"></a>bmi160_get_foc_gyro_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>bmi160_get_gyro_offset_compensation_zaxis</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_foc_gyro_enable
</UL>

<P><STRONG><a name="[11e]"></a>bmi160_get_gyro_offset_compensation_yaxis</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_foc_gyro_enable
</UL>

<P><STRONG><a name="[11d]"></a>bmi160_get_gyro_offset_compensation_xaxis</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_foc_gyro_enable
</UL>

<P><STRONG><a name="[11c]"></a>bmi160_set_gyro_offset_enable</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_compensation_zaxis
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_compensation_yaxis
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_compensation_xaxis
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_foc_gyro_enable
</UL>

<P><STRONG><a name="[11b]"></a>bmi160_set_foc_gyro_enable</STRONG> (Thumb, 274 bytes, Stack size 56 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_enable
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_gyro_offset_compensation_xaxis
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_gyro_offset_compensation_yaxis
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_gyro_offset_compensation_zaxis
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_foc_rdy
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>

<P><STRONG><a name="[3f6]"></a>bmi160_get_nvm_prog_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f7]"></a>bmi160_set_nvm_prog_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f8]"></a>bmi160_get_spi3</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3f9]"></a>bmi160_set_spi3</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3fa]"></a>bmi160_get_i2c_wdt_select</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3fb]"></a>bmi160_set_i2c_wdt_select</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3fc]"></a>bmi160_get_i2c_wdt_enable</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[3fd]"></a>bmi160_set_i2c_wdt_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>bmi160_get_if_mode</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_if_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[152]"></a>bmi160_set_if_mode</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_if_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[3fe]"></a>bmi160_get_gyro_sleep_trigger</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[18d]"></a>bmi160_set_gyro_sleep_trigger</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_sleep_trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[3ff]"></a>bmi160_get_gyro_wakeup_trigger</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[18e]"></a>bmi160_set_gyro_wakeup_trigger</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_wakeup_trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[400]"></a>bmi160_get_gyro_sleep_state</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[18f]"></a>bmi160_set_gyro_sleep_state</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_sleep_state
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[401]"></a>bmi160_get_gyro_wakeup_intr</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>bmi160_set_gyro_wakeup_intr</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_gyro_wakeup_intr
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[402]"></a>bmi160_get_accel_selftest_axis</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[403]"></a>bmi160_set_accel_selftest_axis</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[404]"></a>bmi160_get_accel_selftest_sign</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[405]"></a>bmi160_set_accel_selftest_sign</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[406]"></a>bmi160_get_accel_selftest_amp</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[407]"></a>bmi160_set_accel_selftest_amp</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[408]"></a>bmi160_get_gyro_selftest_start</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[409]"></a>bmi160_set_gyro_selftest_start</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[40a]"></a>bmi160_get_spi_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[40b]"></a>bmi160_set_spi_enable</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[40c]"></a>bmi160_get_spare0_trim</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[40d]"></a>bmi160_set_spare0_trim</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[40e]"></a>bmi160_get_nvm_counter</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[40f]"></a>bmi160_set_nvm_counter</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[120]"></a>bmi160_set_accel_offset_compensation_xaxis</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_enable
</UL>

<P><STRONG><a name="[121]"></a>bmi160_set_accel_offset_compensation_yaxis</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_enable
</UL>

<P><STRONG><a name="[122]"></a>bmi160_set_accel_offset_compensation_zaxis</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_offset_enable
</UL>

<P><STRONG><a name="[123]"></a>bmi160_set_gyro_offset_compensation_xaxis</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_enable
</UL>

<P><STRONG><a name="[124]"></a>bmi160_set_gyro_offset_compensation_yaxis</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_enable
</UL>

<P><STRONG><a name="[125]"></a>bmi160_set_gyro_offset_compensation_zaxis</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_offset_enable
</UL>

<P><STRONG><a name="[410]"></a>bmi160_get_accel_offset_enable</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[411]"></a>bmi160_get_gyro_offset_enable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[412]"></a>bmi160_read_step_count</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[413]"></a>bmi160_get_step_config</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[127]"></a>bmi160_set_step_config</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_step_mode
</UL>

<P><STRONG><a name="[126]"></a>bmi160_set_step_mode</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_step_config
</UL>

<P><STRONG><a name="[128]"></a>bmi160_map_significant_motion_intr</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_intr_significant_motion_select
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_significant_motion_select
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_write_reg
</UL>

<P><STRONG><a name="[129]"></a>bmi160_map_step_detector_intr</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_step_detector_enable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_step_detector_enable
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_write_reg
</UL>

<P><STRONG><a name="[12a]"></a>bmi160_clear_step_counter</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>

<P><STRONG><a name="[14b]"></a>bmi160_get_target_page</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_target_page
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[14a]"></a>bmi160_set_target_page</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_target_page
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[14d]"></a>bmi160_get_paging_enable</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_paging_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[14c]"></a>bmi160_set_paging_enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_paging_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[14e]"></a>bmi160_get_pullup_configuration</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_get_pullup_configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[14f]"></a>bmi160_set_pullup_configuration</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_set_pullup_configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[12b]"></a>bmi160_bst_yamaha_yas537_fifo_xyz_data</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bmi160_bst_yamaha_yas537_fifo_xyz_data &rArr; bmi160_set_mag_manual_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xy1y2_to_xyz
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalid_magnetic_field
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[132]"></a>bmi160_bst_yas532_xy1y2_to_linear</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_measurement_xyz_data
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_fifo_xyz_data
</UL>

<P><STRONG><a name="[131]"></a>bmi160_bst_yas532_fifo_xyz_data</STRONG> (Thumb, 728 bytes, Stack size 84 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[13c]"></a>bmi160_bst_akm09912_compensate_Z</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[13b]"></a>bmi160_bst_akm09912_compensate_Y</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[13a]"></a>bmi160_bst_akm09912_compensate_X</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[139]"></a>bmi160_bst_akm09911_compensate_Z</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[138]"></a>bmi160_bst_akm09911_compensate_Y</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[137]"></a>bmi160_bst_akm09911_compensate_X</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[136]"></a>bmi160_bmm150_mag_compensate_Z</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = bmi160_bmm150_mag_compensate_Z
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[135]"></a>bmi160_bmm150_mag_compensate_Y</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bmi160_bmm150_mag_compensate_Y
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[134]"></a>bmi160_bmm150_mag_compensate_X</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bmi160_bmm150_mag_compensate_X
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_xyz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
</UL>

<P><STRONG><a name="[133]"></a>bmi160_second_if_mag_compensate_xyz</STRONG> (Thumb, 1092 bytes, Stack size 120 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_X
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_Y
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_Z
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_X
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_Y
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_Z
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_X
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_Y
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_Z
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_fifo_xyz_data
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_fifo_xyz_data
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_headerless_mode_user_defined_length
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_header_data_user_defined_length
</UL>

<P><STRONG><a name="[13d]"></a>bmi160_read_fifo_header_data_user_defined_length</STRONG> (Thumb, 2136 bytes, Stack size 72 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_fifo_data
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_header_data
</UL>

<P><STRONG><a name="[13f]"></a>bmi160_read_fifo_header_data</STRONG> (Thumb, 34 bytes, Stack size 3672 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3964<LI>Call Chain = bmi160_read_fifo_header_data &rArr; bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_header_data_user_defined_length
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[140]"></a>bmi160_read_fifo_headerless_mode_user_defined_length</STRONG> (Thumb, 1796 bytes, Stack size 64 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_second_if_mag_compensate_xyz
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_header_enable
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_fifo_data
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_headerless_mode
</UL>

<P><STRONG><a name="[142]"></a>bmi160_read_fifo_headerless_mode</STRONG> (Thumb, 34 bytes, Stack size 3520 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_headerless_mode_user_defined_length
</UL>

<P><STRONG><a name="[143]"></a>bmi160_bmm150_mag_compensate_xyz</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_X
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_Y
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_compensate_Z
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_mag_xyzr
</UL>

<P><STRONG><a name="[145]"></a>bmi160_set_bmm150_mag_presetmode</STRONG> (Thumb, 648 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bmi160_set_bmm150_mag_presetmode &rArr; bmi160_set_mag_manual_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[147]"></a>bmi160_read_bmm150_mag_trim</STRONG> (Thumb, 892 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bmi160_read_bmm150_mag_trim &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[148]"></a>bmi160_bmm150_mag_wakeup</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bmi160_bmm150_mag_wakeup &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
</UL>

<P><STRONG><a name="[149]"></a>bmi160_bmm150_mag_interface_init</STRONG> (Thumb, 534 bytes, Stack size 24 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bmi160_bmm150_mag_interface_init &rArr; bmi160_set_mag_interface_normal &rArr; bmi160_set_command_register &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_wakeup
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bmm150_mag_trim
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_presetmode
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_pullup_configuration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_pullup_configuration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_paging_enable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_paging_enable
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_target_page
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_target_page
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_if_mode
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_if_mode
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_mag_manual_enable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_i2c_device_addr
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_output_data_rate
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[155]"></a>bmi160_bmm150_mag_set_power_mode</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bmi160_bmm150_mag_set_power_mode &rArr; bmi160_bmm150_mag_wakeup &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_wakeup
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_presetmode
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_and_secondary_if_power_mode
</UL>

<P><STRONG><a name="[156]"></a>bmi160_set_bmm150_mag_and_secondary_if_power_mode</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bmi160_set_bmm150_mag_and_secondary_if_power_mode &rArr; bmi160_bmm150_mag_set_power_mode &rArr; bmi160_bmm150_mag_wakeup &rArr; bmi160_read_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_set_power_mode
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[157]"></a>bmi160_read_bst_akm_sensitivity_data</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_set_powermode
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_mag_interface_init
</UL>

<P><STRONG><a name="[158]"></a>bmi160_bst_akm_mag_interface_init</STRONG> (Thumb, 600 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bst_akm_sensitivity_data
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_pullup_configuration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_pullup_configuration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_paging_enable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_paging_enable
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_target_page
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_target_page
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_if_mode
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_if_mode
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_mag_manual_enable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_i2c_device_addr
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_output_data_rate
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_mag_power_mode_stat
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>

<P><STRONG><a name="[159]"></a>bmi160_bst_akm09911_compensate_xyz</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_X
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_Y
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09911_compensate_Z
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_mag_xyz
</UL>

<P><STRONG><a name="[15b]"></a>bmi160_bst_akm09912_compensate_xyz</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_X
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_Y
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm09912_compensate_Z
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_mag_xyz
</UL>

<P><STRONG><a name="[15c]"></a>bmi160_bst_akm_set_powermode</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_bst_akm_sensitivity_data
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bst_akm_and_secondary_if_powermode
</UL>

<P><STRONG><a name="[15d]"></a>bmi160_set_bst_akm_and_secondary_if_powermode</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_akm_set_powermode
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>

<P><STRONG><a name="[15e]"></a>bmi160_bst_yas532_set_offset</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_magnetic_measure_set_offset
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_initial_values
</UL>

<P><STRONG><a name="[15f]"></a>bmi160_bst_yas532_set_initial_values</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_offset
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
</UL>

<P><STRONG><a name="[160]"></a>bmi160_bst_yamaha_yas532_calib_values</STRONG> (Thumb, 774 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_mag_interface_init
</UL>

<P><STRONG><a name="[161]"></a>bmi160_bst_yamaha_yas532_mag_interface_init</STRONG> (Thumb, 574 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas532_calib_values
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_initial_values
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_pullup_configuration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_pullup_configuration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_paging_enable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_paging_enable
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_target_page
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_target_page
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_if_mode
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_if_mode
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_mag_manual_enable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_i2c_device_addr
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_output_data_rate
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>

<P><STRONG><a name="[162]"></a>bmi160_bst_yas532_acquisition_command_register</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_normal_measurement_data
</UL>

<P><STRONG><a name="[163]"></a>bmi160_bst_yas532_normal_measurement_data</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_acquisition_command_register
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_measurement_xyz_data
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_magnetic_measure_set_offset
</UL>

<P><STRONG><a name="[164]"></a>bmi160_bst_yas532_magnetic_measure_set_offset</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_normal_measurement_data
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_set_offset
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_measurement_xyz_data
</UL>

<P><STRONG><a name="[165]"></a>bmi160_bst_yas532_measurement_xyz_data</STRONG> (Thumb, 878 bytes, Stack size 112 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_magnetic_measure_set_offset
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_normal_measurement_data
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas532_xy1y2_to_linear
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>

<P><STRONG><a name="[166]"></a>bmi160_bst_yamaha_yas537_calib_values</STRONG> (Thumb, 1714 bytes, Stack size 40 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_mag_interface_init
</UL>

<P><STRONG><a name="[167]"></a>bmi160_bst_yamaha_yas537_mag_interface_init</STRONG> (Thumb, 550 bytes, Stack size 24 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_calib_values
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_pullup_configuration
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_pullup_configuration
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_paging_enable
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_paging_enable
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_target_page
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_target_page
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_if_mode
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_if_mode
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_mag_manual_enable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_i2c_device_addr
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_output_data_rate
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_interface_normal
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
</UL>

<P><STRONG><a name="[168]"></a>bmi160_bst_yas537_acquisition_command_register</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_read_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_read_xy1y2_data
</UL>

<P><STRONG><a name="[169]"></a>bmi160_bst_yamaha_yas537_read_xy1y2_data</STRONG> (Thumb, 526 bytes, Stack size 64 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yas537_acquisition_command_register
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_measure_xyz_data
</UL>

<P><STRONG><a name="[16a]"></a>bmi160_bst_yamaha_yas537_measure_xyz_data</STRONG> (Thumb, 446 bytes, Stack size 56 bytes, bmi160.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_read_xy1y2_data
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_data
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_write_addr
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_mag_manual_enable
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xy1y2_to_xyz
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalid_magnetic_field
</UL>

<P><STRONG><a name="[414]"></a>bmi160_get_ptr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bmi160.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>bmi160_delay_ms</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bmi160_delay_ms &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bmi160_support.o(.text)
</UL>
<P><STRONG><a name="[16c]"></a>bmi160_spi_bus_read</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bmi160_spi_bus_read
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bmi160_support.o(.text)
</UL>
<P><STRONG><a name="[16e]"></a>SPI_WRITE_STRING</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPI_WRITE_STRING &rArr; SpiWriteData &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_spi_bus_write
</UL>

<P><STRONG><a name="[170]"></a>bmi160_spi_bus_write</STRONG> (Thumb, 80 bytes, Stack size 96 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = bmi160_spi_bus_write &rArr; SPI_WRITE_STRING &rArr; SpiWriteData &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WRITE_STRING
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bmi160_support.o(.text)
</UL>
<P><STRONG><a name="[172]"></a>spi_routine</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, bmi160_support.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_mode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
</UL>

<P><STRONG><a name="[171]"></a>bmi160_set_gyro_mode</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bmi160_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_routine
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>

<P><STRONG><a name="[174]"></a>bmi160_set_accel_mode</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bmi160_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>

<P><STRONG><a name="[175]"></a>bmi160_set_gyro_rate</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bmi160_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_output_data_rate
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>

<P><STRONG><a name="[177]"></a>bmi160_set_accel_rate</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, bmi160_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_output_data_rate
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>

<P><STRONG><a name="[178]"></a>bmi160_set_gyro_bandwidth</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bmi160_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_bw
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>

<P><STRONG><a name="[17a]"></a>bmi160_set_accel_bandwidth</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bmi160_support.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_bw
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>

<P><STRONG><a name="[ec]"></a>bmi160_read_sensor_data</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bmi160_read_sensor_data &rArr; bmi160_get_sensor_time
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_sensor_time
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_accel_xyz
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_gyro_xyz
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_sec
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromBMI160
</UL>

<P><STRONG><a name="[17f]"></a>bmi160_interrupt_configuration</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bmi160_interrupt_configuration &rArr; bmi160_set_output_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_output_enable
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_level
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
</UL>

<P><STRONG><a name="[182]"></a>bmi160_config_running_mode</STRONG> (Thumb, 1998 bytes, Stack size 24 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 3988<LI>Call Chain = bmi160_config_running_mode &rArr; bmi160_read_fifo_header_data &rArr; bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_interrupt_configuration
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_bmm150_mag_and_secondary_if_power_mode
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bmm150_mag_interface_init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_fifo_header_data
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_wakeup_intr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_sleep_state
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_wakeup_trigger
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_sleep_trigger
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_if_mode
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_get_if_mode
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_fifo_wm
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_enable_2
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_intr_enable_0
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_gyro_enable
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_accel_enable
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_mag_enable
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_header_enable
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_time_enable
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_fifo_wm
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_range
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_bw
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_gyro_output_data_rate
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_range
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_bw
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_accel_output_data_rate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_accel_xyz
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_gyro_xyz
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_set_command_register
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_initialize_sensor
</UL>

<P><STRONG><a name="[e9]"></a>bmi160_initialize_sensor</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, bmi160_support.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4004<LI>Call Chain = bmi160_initialize_sensor &rArr; bmi160_config_running_mode &rArr; bmi160_read_fifo_header_data &rArr; bmi160_read_fifo_header_data_user_defined_length &rArr; bmi160_second_if_mag_compensate_xyz &rArr; bmi160_bst_yas532_fifo_xyz_data &rArr; bmi160_bst_yas532_xy1y2_to_linear
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_config_running_mode
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_routine
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_delay_ms
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_read_reg
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_init
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor_BMI160_init
</UL>

<P><STRONG><a name="[de]"></a>spi1_Configuration</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spi1_Configuration &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16d]"></a>SPI1_ReadWrite_Byte</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMultData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadReg
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadLsm6ds33DevID
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMpu6500DevID
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadAk8975DevID
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadBmi160DevID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteData
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_spi_bus_read
</UL>

<P><STRONG><a name="[194]"></a>SpiReadBmi160DevID</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[195]"></a>SpiReadAk8975DevID</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[196]"></a>SpiReadMpu6500DevID</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[197]"></a>SpiReadLsm6ds33DevID</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[198]"></a>SpiReadReg</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[199]"></a>SpiReadMultData</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[16f]"></a>SpiWriteData</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SpiWriteData &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_ReadWrite_Byte
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WRITE_STRING
</UL>

<P><STRONG><a name="[e2]"></a>TIM3_Int_Init</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM3_Int_Init &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>TIM3_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TIM3_IRQHandler &rArr; getDataFromBMI160 &rArr; bmi160_read_sensor_data &rArr; bmi160_get_sensor_time
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_int
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDataFromBMI160
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Running_LED_int
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>TIM4_Init</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TIM4_Init &rArr; TIM_ICInit &rArr; TI1_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a1]"></a>TIM4_capture</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture4
</UL>

<P><STRONG><a name="[dd]"></a>TIM5_Int_Init</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM5_Int_Init &rArr; TIM_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>TIM5_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM5_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1a6]"></a>delayUs</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>

<P><STRONG><a name="[af]"></a>delayMs</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_WrByteUnlocked
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByteUnlocked
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMultData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadReg
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadLsm6ds33DevID
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadMpu6500DevID
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadAk8975DevID
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiReadBmi160DevID
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiWriteData
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_delay_ms
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
</UL>

<P><STRONG><a name="[e1]"></a>BSP_Uart2_Init</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BSP_Uart2_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USART2_IRQHandler &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1af]"></a>BSP_Uart2_RdByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_RdByteUnlocked
</UL>

<P><STRONG><a name="[415]"></a>BSP_Uart2_RdBytes</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, usart2.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>BSP_Uart2_WrByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BSP_Uart2_WrByte &rArr; BSP_Uart2_WrByteUnlocked &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByteUnlocked
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printch
</UL>

<P><STRONG><a name="[1b3]"></a>BSP_Uart2_RdBytelock</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_SendCommand
</UL>

<P><STRONG><a name="[1b2]"></a>BSP_Uart2_SendCommand</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_RdBytelock
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByteUnlocked
</UL>

<P><STRONG><a name="[1b4]"></a>BSP_Uart2_WrStr</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByteUnlocked
</UL>

<P><STRONG><a name="[b1]"></a>BSP_Uart3_Init</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, usart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BSP_Uart3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
</UL>

<P><STRONG><a name="[32]"></a>USART3_IRQHandler</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, usart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USART3_IRQHandler &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_GpsData_byte
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_cfgCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1b7]"></a>BSP_Uart3_RdByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_RdByteUnlocked
</UL>

<P><STRONG><a name="[1ba]"></a>BSP_Uart3_WrByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_WrByteUnlocked
</UL>

<P><STRONG><a name="[1bc]"></a>BSP_Uart3_RdBytelock</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendCommand
</UL>

<P><STRONG><a name="[1bb]"></a>BSP_Uart3_SendCommand</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_RdBytelock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_WrByteUnlocked
</UL>

<P><STRONG><a name="[1bd]"></a>BSP_Uart3_EnableTxE</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>

<P><STRONG><a name="[1be]"></a>BSP_Uart3_SendByte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_Uart3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendBuff
</UL>

<P><STRONG><a name="[ae]"></a>BSP_Uart3_SendBuff</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usart3.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BSP_Uart3_SendBuff &rArr; BSP_Uart3_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
</UL>

<P><STRONG><a name="[1bf]"></a>pb_Load_NvmData_Init</STRONG> (Thumb, 2560 bytes, Stack size 176 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = pb_Load_NvmData_Init &rArr; pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_NvmData
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_NavFilter
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_LastNavSysStates
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_SNSRCfg
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_OsfFilterPtr
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavFilterPtr
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GsfFilterPtr
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GeoParamPtr
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_B2SFilter
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Dcm
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Quat
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2DcmB2S
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_System_Init
</UL>

<P><STRONG><a name="[1cf]"></a>pb_DR_Nav_Filter_Init</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pb_DR_Nav_Filter_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavFilterPtr
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d0]"></a>pb_DR_NavMech_Init</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pb_DR_NavMech_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavMech
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d2]"></a>pb_DR_StaticDetector_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_StaticDetector_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_StaticDetector
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d4]"></a>pb_DR_Geo_Params_Init</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = pb_DR_Geo_Params_Init &rArr; pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GeoParamPtr
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d5]"></a>pb_DR_SNSRCfg_Init</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pb_DR_SNSRCfg_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_SNSRCfg
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d6]"></a>pb_DR_Osf_Filter_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_Osf_Filter_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_OsfFilterPtr
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d7]"></a>pb_DR_Gsf_Filter_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_Gsf_Filter_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GsfFilterPtr
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d8]"></a>pb_DR_B2S_Filter_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_B2S_Filter_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_B2SFilter
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
</UL>

<P><STRONG><a name="[1d9]"></a>pb_DR_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = pb_DR_Init &rArr; pb_DR_Geo_Params_Init &rArr; pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter_Init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Gsf_Filter_Init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Osf_Filter_Init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_SNSRCfg_Init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Geo_Params_Init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_StaticDetector_Init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_NavMech_Init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Filter_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_System_Init
</UL>

<P><STRONG><a name="[1dc]"></a>pb_Init_Dops</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, pb_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
</UL>

<P><STRONG><a name="[1da]"></a>pb_NavState_Init</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = pb_NavState_Init &rArr; pb_GeoPos2Dcm &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Init_Dops
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavSys_Init
</UL>

<P><STRONG><a name="[1dd]"></a>pb_NavSys_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = pb_NavSys_Init &rArr; pb_NavState_Init &rArr; pb_GeoPos2Dcm &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Init
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_System_Init
</UL>

<P><STRONG><a name="[f2]"></a>pb_System_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pb_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = pb_System_Init &rArr; pb_Load_NvmData_Init &rArr; pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SnsrBuffer_Init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Data_Init
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavSys_Init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[ee]"></a>pb_Version_Info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[1e2]"></a>pb_DR_Clear</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, pb_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Data_Init
</UL>

<P><STRONG><a name="[1e0]"></a>pb_Data_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, pb_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pb_Data_Init &rArr; pb_DR_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_System_Init
</UL>

<P><STRONG><a name="[245]"></a>pb_Get_SystemTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
</UL>

<P><STRONG><a name="[1ea]"></a>pb_Get_UnixTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_UnixTime
</UL>

<P><STRONG><a name="[1e4]"></a>pb_Get_RawGNSS_Enriched_Fix</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SoftwareLicense
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
</UL>

<P><STRONG><a name="[1e8]"></a>pb_Get_GNSS_AuxChan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Pos_Vel_Var_Modeling
</UL>

<P><STRONG><a name="[242]"></a>pb_Get_Internal_GNSSNavFix</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Stationary_Sensor_Detection
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
</UL>

<P><STRONG><a name="[268]"></a>pb_Get_Internal_LastGNSSNavFix_Ptr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
</UL>

<P><STRONG><a name="[1eb]"></a>pb_Get_RawDRSensrorData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_External_DR_SensrorData
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Set_SensorSet_ForcedDR
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
</UL>

<P><STRONG><a name="[1c1]"></a>pb_Get_WoringNavSysStates</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_SNSRCfg_Init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Geo_Params_Init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_NavMech_Init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Filter_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
</UL>

<P><STRONG><a name="[1c2]"></a>pb_Get_LastNavSysStates</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
</UL>

<P><STRONG><a name="[244]"></a>pb_Get_ControlState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[248]"></a>pb_Get_ContextState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_AddQ_Sensors
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Stationary_Sensor_Detection
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
</UL>

<P><STRONG><a name="[1e3]"></a>pb_Age_States</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, pb_memory.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Age_States
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[1c3]"></a>pb_Get_NavFilter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[263]"></a>pb_Get_DR_Sesnors</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[243]"></a>pb_Get_DR_Sensor1sPtr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[1d1]"></a>pb_Get_DR_NavMech</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_NavMech_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[1c5]"></a>pb_Get_DR_NavFilterPtr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Filter_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[1c4]"></a>pb_Get_DR_SNSRCfg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_SNSRCfg_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[1c6]"></a>pb_Get_DR_B2SFilter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[1c8]"></a>pb_Get_DR_GsfFilterPtr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Gsf_Filter_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[1c7]"></a>pb_Get_DR_OsfFilterPtr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Osf_Filter_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[1c9]"></a>pb_Get_DR_GeoParamPtr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Geo_Params_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
</UL>

<P><STRONG><a name="[1d3]"></a>pb_Get_DR_StaticDetector</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_StaticDetector_Init
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[24d]"></a>pb_Get_DR_VirtualAiding</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_AidingInfo
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[a4]"></a>pb_Query_OutputNavigationState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Query_OutputNavigationState
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_io_InfoOutput
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
</UL>

<P><STRONG><a name="[f1]"></a>pb_Set_OutputNavigationState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Set_OutputNavigationState
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
</UL>

<P><STRONG><a name="[f0]"></a>pb_Set_NvmData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Set_NvmData
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
</UL>

<P><STRONG><a name="[1c0]"></a>pb_Get_NvmData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Get_NvmData
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
</UL>

<P><STRONG><a name="[fe]"></a>pb_SoftwareLicense</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pb_SoftwareLicense
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GPSWeek_SanityCheck
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawGNSS_Enriched_Fix
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
</UL>

<P><STRONG><a name="[fc]"></a>pb_Extrapolate_ExternalGNSSFix</STRONG> (Thumb, 252 bytes, Stack size 72 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = pb_Extrapolate_ExternalGNSSFix &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawGNSS_Enriched_Fix
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
</UL>

<P><STRONG><a name="[fb]"></a>pb_Set_ExternalGNSS_Enriched_Fix</STRONG> (Thumb, 526 bytes, Stack size 40 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pb_Set_ExternalGNSS_Enriched_Fix &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawGNSS_Enriched_Fix
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
</UL>

<P><STRONG><a name="[fd]"></a>pb_Set_ExternalGNSS_AuxChan</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = pb_Set_ExternalGNSS_AuxChan &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_GNSS_AuxChan
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
</UL>

<P><STRONG><a name="[1e9]"></a>pb_Set_UnixTime</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, pb_if.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_UnixTime
</UL>

<P><STRONG><a name="[fa]"></a>pb_Set_External_DR_SensrorData</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pb_Set_External_DR_SensrorData &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawDRSensrorData
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
</UL>

<P><STRONG><a name="[ff]"></a>pb_DR_Main_external</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pb_if.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1480<LI>Call Chain = pb_DR_Main_external &rArr; pb_DR_Main &rArr; pb_Navigation &rArr; pb_DR_Navigation &rArr; pb_DR_Solution &rArr; pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[1ed]"></a>pb_Msl_Weight</STRONG> (Thumb, 168 bytes, Stack size 88 bytes, pb_msl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = pb_Msl_Weight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>

<P><STRONG><a name="[1ee]"></a>pb_Msl_Compute</STRONG> (Thumb, 1158 bytes, Stack size 176 bytes, pb_msl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = pb_Msl_Compute &rArr; pb_Msl_Weight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Weight
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Init
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Update
</UL>

<P><STRONG><a name="[1de]"></a>pb_MSL_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pb_msl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pb_MSL_Init &rArr; pb_Msl_Compute &rArr; pb_Msl_Weight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavSys_Init
</UL>

<P><STRONG><a name="[1f1]"></a>pb_MSL_Update</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, pb_msl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = pb_MSL_Update &rArr; pb_Msl_Compute &rArr; pb_Msl_Weight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Update_Part_OutputNavState
</UL>

<P><STRONG><a name="[26a]"></a>pb_Get_GeoidSepMeter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pb_msl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Update_Part_OutputNavState
</UL>

<P><STRONG><a name="[1f2]"></a>pb_UTC2GpsTime</STRONG> (Thumb, 328 bytes, Stack size 56 bytes, pb_geoutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
</UL>

<P><STRONG><a name="[1f4]"></a>pb_LeapYear_Check</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, pb_geoutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
</UL>

<P><STRONG><a name="[1f5]"></a>pb_GetUTC_Offset</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, pb_geoutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
</UL>

<P><STRONG><a name="[1f3]"></a>pb_GpsTime2UTC</STRONG> (Thumb, 528 bytes, Stack size 96 bytes, pb_geoutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pb_GpsTime2UTC &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GetUTC_Offset
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_LeapYear_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
</UL>

<P><STRONG><a name="[1f6]"></a>pb_ConvertGPSToUnixTime</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, pb_geoutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[1db]"></a>pb_GeoPos2Dcm</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, pb_geoutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pb_GeoPos2Dcm &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_PropagatePos
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
</UL>

<P><STRONG><a name="[1e6]"></a>pb_Ellipsoid_Radius</STRONG> (Thumb, 226 bytes, Stack size 72 bytes, pb_geoutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
</UL>

<P><STRONG><a name="[1f9]"></a>pb_Geo2ECEF</STRONG> (Thumb, 300 bytes, Stack size 88 bytes, pb_geoutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
</UL>

<P><STRONG><a name="[1fa]"></a>pb_ECEF2Geo</STRONG> (Thumb, 1372 bytes, Stack size 216 bytes, pb_geoutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_PropagatePos
</UL>

<P><STRONG><a name="[1fc]"></a>pb_NormalGravity</STRONG> (Thumb, 364 bytes, Stack size 168 bytes, pb_geoutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
</UL>

<P><STRONG><a name="[1fd]"></a>pb_Get_Distance</STRONG> (Thumb, 356 bytes, Stack size 136 bytes, pb_geoutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = pb_Get_Distance &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Static_Dection_Sys
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
</UL>

<P><STRONG><a name="[416]"></a>pb_MEMS_Alt_Convert_Pa2Cm</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, pb_geoutil.o(.text), UNUSED)

<P><STRONG><a name="[417]"></a>pb_Get_Delta_Az</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, pb_geoutil.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>pb_GPSWeek_SanityCheck</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pb_geoutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SoftwareLicense
</UL>

<P><STRONG><a name="[1df]"></a>pb_Distance_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pb_distance.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_Distance_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavSys_Init
</UL>

<P><STRONG><a name="[1fe]"></a>pb_Distance_Update</STRONG> (Thumb, 1506 bytes, Stack size 112 bytes, pb_distance.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pb_Distance_Update &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[261]"></a>pb_DR_Pre_Rotate_Axes</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_Pre_Rotate_Axes
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Sesnor_Load
</UL>

<P><STRONG><a name="[256]"></a>pb_DR_PreRotation_Selection</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_PreRotation_Selection
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[1ce]"></a>pb_DR_Set_GeoParam</STRONG> (Thumb, 622 bytes, Stack size 112 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = pb_DR_Set_GeoParam &rArr; pb_NormalGravity &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NormalGravity
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Geo_Params_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[200]"></a>Pos2Quat</STRONG> (Thumb, 336 bytes, Stack size 80 bytes, pb_dr_inertial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[201]"></a>Quat2Pos</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, pb_dr_inertial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
</UL>

<P><STRONG><a name="[204]"></a>Rvec2Quat</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Rvec2Quat &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[210]"></a>QuatPrdct</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[1cc]"></a>Quat2Dcm</STRONG> (Thumb, 362 bytes, Stack size 0 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[207]"></a>Dcm2Quat</STRONG> (Thumb, 722 bytes, Stack size 40 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Dcm2Quat &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[208]"></a>Quat2Euler</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Quat2Euler &rArr; __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
</UL>

<P><STRONG><a name="[1cb]"></a>Euler2Quat</STRONG> (Thumb, 220 bytes, Stack size 72 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Euler2Quat &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
</UL>

<P><STRONG><a name="[20a]"></a>QuatNormalize</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = QuatNormalize &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
</UL>

<P><STRONG><a name="[20b]"></a>Euler2Dcm</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Euler2Dcm &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[20c]"></a>Dcm2Euler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Dcm2Euler &rArr; __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_SanityCheck
</UL>

<P><STRONG><a name="[1cd]"></a>Euler2DcmB2S</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Euler2DcmB2S &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
</UL>

<P><STRONG><a name="[20d]"></a>pb_DR_INS_SanityCheck</STRONG> (Thumb, 244 bytes, Stack size 88 bytes, pb_dr_inertial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxM
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Euler
</UL>

<P><STRONG><a name="[20f]"></a>pb_DR_INS_MECH</STRONG> (Thumb, 920 bytes, Stack size 120 bytes, pb_dr_inertial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = pb_DR_INS_MECH &rArr; Rvec2Quat &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Dcm
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VectorCrossProductF
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VaddV_F
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3_F
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MaddM_F
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuatPrdct
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rvec2Quat
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[1ec]"></a>pb_DR_Main</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pb_mainctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = pb_DR_Main &rArr; pb_Navigation &rArr; pb_DR_Navigation &rArr; pb_DR_Solution &rArr; pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SnsrBuffer_Update
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main_external
</UL>

<P><STRONG><a name="[1e1]"></a>pb_SnsrBuffer_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, pb_snsrbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_SnsrBuffer_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_System_Init
</UL>

<P><STRONG><a name="[21f]"></a>pbDR_DownSampling_And_Cond_ForcedDR</STRONG> (Thumb, 1854 bytes, Stack size 80 bytes, pb_snsrbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = pbDR_DownSampling_And_Cond_ForcedDR &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Set_SensorSet_ForcedDR
</UL>

<P><STRONG><a name="[221]"></a>pbDR_Get_DR_RedayDataSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, pb_snsrbuffer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Set_SensorSet_ForcedDR
</UL>

<P><STRONG><a name="[220]"></a>pbDR_Set_SensorSet_ForcedDR</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, pb_snsrbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = pbDR_Set_SensorSet_ForcedDR &rArr; pbDR_DownSampling_And_Cond_ForcedDR &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Get_DR_RedayDataSet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_DownSampling_And_Cond_ForcedDR
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawDRSensrorData
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SnsrBuffer_Update
</UL>

<P><STRONG><a name="[21d]"></a>pb_SnsrBuffer_Update</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, pb_snsrbuffer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = pb_SnsrBuffer_Update &rArr; pbDR_Set_SensorSet_ForcedDR &rArr; pbDR_DownSampling_And_Cond_ForcedDR &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Set_SensorSet_ForcedDR
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main
</UL>

<P><STRONG><a name="[222]"></a>ATAN2</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ATAN2 &rArr; __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
</UL>

<P><STRONG><a name="[223]"></a>ATAN2F</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ATAN2F &rArr; __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Update_Part_OutputNavState
</UL>

<P><STRONG><a name="[224]"></a>MATH_Mod</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
</UL>

<P><STRONG><a name="[225]"></a>MATH_Mod_Int16</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
</UL>

<P><STRONG><a name="[226]"></a>MATH_MxV_3x3</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MATH_MxV_3x3 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[211]"></a>MATH_MxV_3x3_F</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MATH_MxV_3x3_F
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Phi
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[23d]"></a>MATH_MtxV_3x3_F</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MATH_MtxV_3x3_F
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
</UL>

<P><STRONG><a name="[212]"></a>MATH_VectorCrossProductF</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MATH_VectorCrossProductF
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[213]"></a>MATH_MaddM_F</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Orthogonalization
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[418]"></a>MATH_MsubM_F</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, pb_mathutil.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>MATH_VaddV_F</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
</UL>

<P><STRONG><a name="[227]"></a>MATH_VsubV_D</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[419]"></a>MATH_VsubV_F</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, pb_mathutil.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>MATH_MxSF</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Orthogonalization
</UL>

<P><STRONG><a name="[251]"></a>MATH_VxSF</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[228]"></a>MATH_MxMt</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MATH_MxMt
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Orthogonalization
</UL>

<P><STRONG><a name="[20e]"></a>MATH_MxM</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MATH_MxM
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Orthogonalization
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_SanityCheck
</UL>

<P><STRONG><a name="[24f]"></a>MATH_Mt</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[23f]"></a>MATH_Mt_D</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
</UL>

<P><STRONG><a name="[229]"></a>MATH_Orthogonalization</STRONG> (Thumb, 84 bytes, Stack size 120 bytes, pb_mathutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MATH_Orthogonalization &rArr; MATH_MxMt
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxMt
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxSF
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxM
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MaddM_F
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
</UL>

<P><STRONG><a name="[250]"></a>MATH_Skew</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[41a]"></a>MATH_DiagMatrix</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, pb_mathutil.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>MATH_ZeroM</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
</UL>

<P><STRONG><a name="[25e]"></a>MATH_ZeroV</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pb_mathutil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
</UL>

<P><STRONG><a name="[22b]"></a>MATH_InvertMatrix</STRONG> (Thumb, 1190 bytes, Stack size 40 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[231]"></a>MATH_Zeros2D</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Alloc_2d
</UL>

<P><STRONG><a name="[22c]"></a>Mem_Alloc_1d</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[22e]"></a>MATH_Free_1d</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[230]"></a>Mem_Alloc_2d</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Zeros2D
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[232]"></a>MATH_Free_2d</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[239]"></a>MATH_MMmult_F</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TriDiag_Matrix
</UL>

<P><STRONG><a name="[233]"></a>MATH_Norm</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[41b]"></a>MATH_Vec_Transpose</STRONG> (Thumb, 50 bytes, Stack size 20 bytes, pb_mathutil.o(.text), UNUSED)

<P><STRONG><a name="[41c]"></a>MATH_FillArrayFromSubArray</STRONG> (Thumb, 222 bytes, Stack size 28 bytes, pb_mathutil.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>MATH_MtoV</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[235]"></a>MATH_VtoM</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>

<P><STRONG><a name="[236]"></a>MATH_Fourier</STRONG> (Thumb, 506 bytes, Stack size 88 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_RealFft512
</UL>

<P><STRONG><a name="[237]"></a>MATH_RealFft512</STRONG> (Thumb, 484 bytes, Stack size 96 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Fourier
</UL>

<P><STRONG><a name="[41d]"></a>MATH_FFTSpectrum</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, pb_mathutil.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>MATH_TransposeSymmetricMatrix</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
</UL>

<P><STRONG><a name="[238]"></a>MATH_TriDiag_Matrix</STRONG> (Thumb, 344 bytes, Stack size 88 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MMmult_F
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
</UL>

<P><STRONG><a name="[23a]"></a>MATH_SVDdecompose</STRONG> (Thumb, 1214 bytes, Stack size 200 bytes, pb_mathutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TriDiag_Matrix
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TransposeSymmetricMatrix
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MMmult_F
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[23c]"></a>pb_DR_Post_Nvm</STRONG> (Thumb, 1638 bytes, Stack size 168 bytes, pb_post.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = pb_DR_Post_Nvm &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_NvmData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_NvmData
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MtxV_3x3_F
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Euler
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[241]"></a>pb_DR_QoS_Compute_Internal_QoS</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, pb_post.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
</UL>

<P><STRONG><a name="[23e]"></a>pb_DR_Post_NavState</STRONG> (Thumb, 2986 bytes, Stack size 224 bytes, pb_post.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = pb_DR_Post_NavState &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Update_Part_OutputNavState
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_QoS_Compute_Internal_QoS
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mt_D
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxM
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Euler
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
</UL>

<P><STRONG><a name="[218]"></a>pb_Post_NavSolution</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, pb_post.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 744<LI>Call Chain = pb_Post_NavSolution &rArr; pb_DR_Post_NavState &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_NavFilter
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_SNSRCfg
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_OsfFilterPtr
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavFilterPtr
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GsfFilterPtr
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_B2SFilter
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_Sensor1sPtr
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_ControlState
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_GNSSNavFix
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[21b]"></a>pb_Post_OutputState</STRONG> (Thumb, 1258 bytes, Stack size 160 bytes, pb_post.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = pb_Post_OutputState &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Query_OutputNavigationState
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_OutputNavigationState
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_SystemTime
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[246]"></a>pb_Speed_Context_Dection</STRONG> (Thumb, 634 bytes, Stack size 48 bytes, pb_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pb_Speed_Context_Dection &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
</UL>

<P><STRONG><a name="[247]"></a>pb_Static_Dection_Sys</STRONG> (Thumb, 302 bytes, Stack size 80 bytes, pb_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = pb_Static_Dection_Sys &rArr; pb_Get_Distance &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
</UL>

<P><STRONG><a name="[21a]"></a>pb_ContextModeDetection</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, pb_context.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 712<LI>Call Chain = pb_ContextModeDetection &rArr; pb_Static_Dection_Sys &rArr; pb_Get_Distance &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_LastNavSysStates
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Static_Dection_Sys
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Speed_Context_Dection
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_ContextState
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[249]"></a>pb_DR_Nav_GNSS_Aiding</STRONG> (Thumb, 730 bytes, Stack size 48 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pb_DR_Nav_GNSS_Aiding &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_AidingInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[24b]"></a>pb_DR_Nav_Update</STRONG> (Thumb, 542 bytes, Stack size 56 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = pb_DR_Nav_Update &rArr; Rvec2Quat &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Dcm
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuatNormalize
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuatPrdct
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rvec2Quat
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[24c]"></a>pb_DR_LooseFilter_Update</STRONG> (Thumb, 3332 bytes, Stack size 872 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_UDMeas
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_GNSS_Aiding
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Skew
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mt
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VxSF
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MtxV_3x3_F
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3_F
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxM
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Euler
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Dcm
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_VirtualAiding
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[252]"></a>pb_DR_Solution</STRONG> (Thumb, 790 bytes, Stack size 120 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1448<LI>Call Chain = pb_DR_Solution &rArr; pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_NavFilter
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_SNSRCfg
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_OsfFilterPtr
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavMech
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavFilterPtr
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GsfFilterPtr
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GeoParamPtr
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_B2SFilter
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UD2Diag
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_InitAverage
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_OdoSF_Filter
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Phi
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_AddQ_Sensors
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Filter_Initialization
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Odo_Detect_Using_GNSS
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxMt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Dcm
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Quat
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreRotation_Selection
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_Sensor1sPtr
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_ControlState
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_GNSSNavFix
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Navigation
</UL>

<P><STRONG><a name="[25d]"></a>DR_Capture_1s_Nav_State</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = DR_Capture_1s_Nav_State &rArr; MATH_Orthogonalization &rArr; MATH_MxMt
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_ZeroV
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_ZeroM
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Orthogonalization
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VxSF
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxSF
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[264]"></a>pb_DR_Average_1s_Data</STRONG> (Thumb, 434 bytes, Stack size 12 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = pb_DR_Average_1s_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[260]"></a>pb_Sesnor_Load</STRONG> (Thumb, 596 bytes, Stack size 56 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pb_Sesnor_Load &rArr; pb_DR_Pre_Rotate_Axes
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pre_Rotate_Axes
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[262]"></a>pb_DR_PreProc</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = pb_DR_PreProc &rArr; pb_DR_INS_MECH &rArr; Rvec2Quat &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_StaticDetector
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_SNSRCfg
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_OsfFilterPtr
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavMech
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_NavFilterPtr
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GsfFilterPtr
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GeoParamPtr
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_B2SFilter
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Stationary_Sensor_Detection
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Sesnor_Load
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Average_1s_Data
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Get_DR_RedayDataSet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_Sensor1sPtr
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_Sesnors
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Navigation
</UL>

<P><STRONG><a name="[217]"></a>pb_DR_Navigation</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pb_dr_nav.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1456<LI>Call Chain = pb_DR_Navigation &rArr; pb_DR_Solution &rArr; pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[41e]"></a>pb_DR_Nav_SensorBiasUpdate</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, pb_dr_nav.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>pb_DR_Pos_Update</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, pb_dr_nav.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[267]"></a>pb_GNSS_Pos_Vel_Var_Modeling</STRONG> (Thumb, 1428 bytes, Stack size 56 bytes, pb_gnss.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pb_GNSS_Pos_Vel_Var_Modeling &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_GNSS_AuxChan
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
</UL>

<P><STRONG><a name="[21e]"></a>pb_GNSS_Proc</STRONG> (Thumb, 1954 bytes, Stack size 72 bytes, pb_gnss.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = pb_GNSS_Proc &rArr; pb_Get_Distance &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Pos_Vel_Var_Modeling
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_LastGNSSNavFix_Ptr
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_GNSSNavFix
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawGNSS_Enriched_Fix
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main
</UL>

<P><STRONG><a name="[21c]"></a>pb_SysTime_Update</STRONG> (Thumb, 266 bytes, Stack size 32 bytes, pb_innerutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = pb_SysTime_Update &rArr; pb_GpsTime2UTC &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawDRSensrorData
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_RawGNSS_Enriched_Fix
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_UnixTime
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_SystemTime
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main
</UL>

<P><STRONG><a name="[216]"></a>pb_UpateNav_Time</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, pb_innerutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pb_UpateNav_Time &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_GNSSNavFix
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_SystemTime
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[269]"></a>pb_PropagatePos</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, pb_innerutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
</UL>

<P><STRONG><a name="[240]"></a>pb_Update_Part_OutputNavState</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, pb_innerutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = pb_Update_Part_OutputNavState &rArr; pb_MSL_Update &rArr; pb_Msl_Compute &rArr; pb_Msl_Weight &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2F
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_GeoidSepMeter
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
</UL>

<P><STRONG><a name="[219]"></a>pb_Posterior_Check</STRONG> (Thumb, 1928 bytes, Stack size 224 bytes, pb_innerutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = pb_Posterior_Check &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_WoringNavSysStates
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_GeoParamPtr
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_GNSSNavFix
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Navigation
</UL>

<P><STRONG><a name="[265]"></a>pbDR_Stationary_Sensor_Detection</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, pb_dr_coreutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pbDR_Stationary_Sensor_Detection &rArr; __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_ContextState
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Internal_GNSSNavFix
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
</UL>

<P><STRONG><a name="[254]"></a>pb_DR_OdoSF_Filter</STRONG> (Thumb, 446 bytes, Stack size 8 bytes, pb_dr_sf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_OdoSF_Filter
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[259]"></a>pb_DR_GyroSF_Filter</STRONG> (Thumb, 1568 bytes, Stack size 152 bytes, pb_dr_sf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = pb_DR_GyroSF_Filter &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[26b]"></a>pb_DR_GyroSF_Filter_2</STRONG> (Thumb, 616 bytes, Stack size 56 bytes, pb_dr_sf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>

<P><STRONG><a name="[257]"></a>pb_DR_B2S_Filter</STRONG> (Thumb, 2036 bytes, Stack size 208 bytes, pb_dr_b2sfilter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = pb_DR_B2S_Filter &rArr; Euler2DcmB2S &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2DcmB2S
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxMt
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MtxV_3x3_F
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VectorCrossProductF
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Dcm
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[26c]"></a>pb_Init_Filter</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, pb_filterutil.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[258]"></a>pb_DR_Filter_Initialization</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, pb_filterutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pb_DR_Filter_Initialization
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[41f]"></a>pb_PhiU</STRONG> (Thumb, 222 bytes, Stack size 0 bytes, pb_filterutil.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>pb_DR_Nav_Phi</STRONG> (Thumb, 2190 bytes, Stack size 80 bytes, pb_filterutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = pb_DR_Nav_Phi &rArr; MATH_MxV_3x3_F
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3_F
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[26d]"></a>pb_Rank1</STRONG> (Thumb, 512 bytes, Stack size 36 bytes, pb_filterutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pb_Rank1
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_AddQ_Sensors
</UL>

<P><STRONG><a name="[25b]"></a>pb_DR_Nav_AddQ_Sensors</STRONG> (Thumb, 742 bytes, Stack size 104 bytes, pb_filterutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = pb_DR_Nav_AddQ_Sensors &rArr; pb_Rank1
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Rank1
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_ContextState
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[25c]"></a>pb_UD2Diag</STRONG> (Thumb, 560 bytes, Stack size 72 bytes, pb_filterutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pb_UD2Diag &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[24e]"></a>pb_DR_UDMeas</STRONG> (Thumb, 740 bytes, Stack size 156 bytes, pb_filterutil.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = pb_DR_UDMeas
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
</UL>

<P><STRONG><a name="[255]"></a>pb_DR_Pos_InitAverage</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, pb_dr_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = pb_DR_Pos_InitAverage &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[253]"></a>pbDR_Odo_Detect_Using_GNSS</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, pb_dr_util.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
</UL>

<P><STRONG><a name="[26e]"></a>pb_DR_Update_SanityCheck</STRONG> (Thumb, 378 bytes, Stack size 40 bytes, pb_dr_util.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>

<P><STRONG><a name="[24a]"></a>pb_DR_Update_AidingInfo</STRONG> (Thumb, 912 bytes, Stack size 64 bytes, pb_dr_util.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pb_DR_Update_AidingInfo &rArr; __hardfp_fabs
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_DR_VirtualAiding
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_GNSS_Aiding
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_ubx
</UL>

<P><STRONG><a name="[ad]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Query_OutputNavigationState
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_NvmData
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_OutputNavigationState
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_NvmData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navsat
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_InitAverage
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Phi
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_PreProc
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DR_Capture_1s_Nav_State
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Solution
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Orthogonalization
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxMt
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxM
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Age_States
</UL>

<P><STRONG><a name="[420]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[421]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[422]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Gluelayer_External_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Process_GpsDataInHandler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buff_clr_UbxData
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ubxraw
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_cfg_in_init
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_SNSR21_Output
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS13_Output
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS6_Output
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_io_InfoOutput
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_GGA_Output
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_RMC_Output
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_Nav_Output
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Gluelayer_External_Init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SnsrBuffer_Init
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Init
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Data_Init
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter_Init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Gsf_Filter_Init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Osf_Filter_Init
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_SNSRCfg_Init
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Geo_Params_Init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_StaticDetector_Init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_NavMech_Init
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Filter_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_calib_values
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_External_DR_SensrorData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navclock
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navcov
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navsat
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Init_Filter
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Phi
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_AddQ_Sensors
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Filter_Initialization
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxMt
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Set_SensorSet_ForcedDR
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxM
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Clear
</UL>

<P><STRONG><a name="[423]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[9f]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbMsg_ConvertGPSToUnixTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertGPSToUnixTime
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_CLK
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_PropagatePos
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_InitAverage
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_Update
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_GNSS_Aiding
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NormalGravity
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ConvertGPSToUnixTime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Weight
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbMsg_ConvertGPSToUnixTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertGPSToUnixTime
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_InitAverage
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VsubV_D
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Pos
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ConvertGPSToUnixTime
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Update
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_Update
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Update_Part_OutputNavState
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos2Quat
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Weight
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_External_DR_SensrorData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_CLK
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_GNSS_Aiding
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Static_Dection_Sys
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MxV_3x3
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos2Quat
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NormalGravity
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Weight
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_InitAverage
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos2Quat
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbMsg_ConvertGPSToUnixTime
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertGPSToUnixTime
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NavState_Init
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_External_DR_SensrorData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_CLK
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod_Int16
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ConvertGPSToUnixTime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertGPSToUnixTime
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_InitAverage
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ConvertGPSToUnixTime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printflt
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_Conditioning_DownSampling
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_CLK
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod_Int16
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbMsg_ConvertGPSToUnixTime
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConvertGPSToUnixTime
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_PVT
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ConvertGPSToUnixTime
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GpsTime2UTC
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_GGA_Output
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_UTC2GpsTime
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_SanityCheck
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter_2
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_PropagatePos
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UD2Diag
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_AidingInfo
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Pos_Update
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_Update
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Nav_GNSS_Aiding
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Static_Dection_Sys
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Speed_Context_Dection
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TriDiag_Matrix
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_RealFft512
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Fourier
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_VtoM
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Norm
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod_Int16
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2F
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_DownSampling_And_Cond_ForcedDR
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Pos
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UTC2GpsTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
</UL>

<P><STRONG><a name="[1ef]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter_2
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UD2Diag
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_AidingInfo
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Static_Dection_Sys
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Speed_Context_Dection
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TriDiag_Matrix
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2F
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_DownSampling_And_Cond_ForcedDR
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Update
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>

<P><STRONG><a name="[a2]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_SanityCheck
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Static_Dection_Sys
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Speed_Context_Dection
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_DownSampling_And_Cond_ForcedDR
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SysTime_Update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_MECH
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Update
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1ca]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Load_NvmData_Init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_External_DR_SensrorData
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_Enriched_Fix
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalGNSS_AuxChan
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Pos_Vel_Var_Modeling
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UD2Diag
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_RealFft512
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Fourier
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_MtoV
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Norm
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos2Quat
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NormalGravity
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>

<P><STRONG><a name="[424]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[277]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[271]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[425]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[426]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[427]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[428]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[429]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[273]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
</UL>

<P><STRONG><a name="[28e]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[42a]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[279]"></a>_drem</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, drem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _drem &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
</UL>

<P><STRONG><a name="[27a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[63]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[42b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[42c]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[42d]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[27c]"></a>__0snprintf</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[42e]"></a>__1snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[99]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_SNSR21_Output
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS13_Output
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_GNSS6_Output
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_BlkEnd_Output
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_GGA_Output
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_RMC_Output
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_SocketMsg_Nav_Output
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRSystemOpen
</UL>

<P><STRONG><a name="[42f]"></a>__c89snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[430]"></a>snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printfa.o(i.__0snprintf), UNUSED)

<P><STRONG><a name="[27e]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[431]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[9b]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_AddNMEACheckSum
</UL>

<P><STRONG><a name="[432]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[433]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[284]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[27f]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[209]"></a>__hardfp_asinf</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, asinf.o(i.__hardfp_asinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_asinf &rArr; sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Euler
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Euler
</UL>

<P><STRONG><a name="[283]"></a>__hardfp_atan</STRONG> (Thumb, 636 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[1fb]"></a>__hardfp_atan2</STRONG> (Thumb, 416 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
</UL>

<P><STRONG><a name="[203]"></a>__hardfp_atan2f</STRONG> (Thumb, 486 bytes, Stack size 16 bytes, atan2f.o(i.__hardfp_atan2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_atan2f
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2F
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_SanityCheck
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Euler
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Euler
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Pos
</UL>

<P><STRONG><a name="[202]"></a>__hardfp_atanf</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, atanf.o(i.__hardfp_atanf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Quat2Pos
</UL>

<P><STRONG><a name="[1e7]"></a>__hardfp_cos</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Extrapolate_ExternalGNSSFix
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos2Quat
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
</UL>

<P><STRONG><a name="[205]"></a>__hardfp_cosf</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Quat
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2DcmB2S
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Dcm
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rvec2Quat
</UL>

<P><STRONG><a name="[a1]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NMEA_Output
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_SanityCheck
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter_2
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UD2Diag
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Update_AidingInfo
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Speed_Context_Dection
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TriDiag_Matrix
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2F
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATAN2
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_DownSampling_And_Cond_ForcedDR
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_MSL_Update
</UL>

<P><STRONG><a name="[91]"></a>__hardfp_floorf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, floorf.o(i.__hardfp_floorf))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_UTC2GpsTime
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UTC2GpsTime
</UL>

<P><STRONG><a name="[1f0]"></a>__hardfp_fmod</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, fmod.o(i.__hardfp_fmod))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_fmod &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod_Int16
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Mod
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Msl_Compute
</UL>

<P><STRONG><a name="[1f8]"></a>__hardfp_pow</STRONG> (Thumb, 3132 bytes, Stack size 184 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = __hardfp_pow &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
</UL>

<P><STRONG><a name="[1f7]"></a>__hardfp_sin</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GeoPos2Dcm
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_RealFft512
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Fourier
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos2Quat
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_NormalGravity
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Geo2ECEF
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
</UL>

<P><STRONG><a name="[206]"></a>__hardfp_sinf</STRONG> (Thumb, 314 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Quat
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2DcmB2S
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Euler2Dcm
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rvec2Quat
</UL>

<P><STRONG><a name="[bd]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Set_ExternalUbxGNSS_COV
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_GyroSF_Filter
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Norm
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_InvertMatrix
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Get_Distance
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ECEF2Geo
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Ellipsoid_Radius
</UL>

<P><STRONG><a name="[1ff]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Set_GeoParam
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_B2S_Filter
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Stationary_Sensor_Detection
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_LooseFilter_Update
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Speed_Context_Dection
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Update_Part_OutputNavState
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_NavState
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Post_Nvm
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_SVDdecompose
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_TriDiag_Matrix
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_GNSS_Proc
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_INS_SanityCheck
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuatNormalize
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dcm2Quat
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rvec2Quat
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
</UL>

<P><STRONG><a name="[289]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 972 bytes, Stack size 168 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[28b]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[287]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[28a]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[285]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[280]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2f
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[28c]"></a>__mathlib_rredf2</STRONG> (Thumb, 296 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[434]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[435]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[436]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[281]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>

<P><STRONG><a name="[288]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[286]"></a>fabs</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[22f]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Free_2d
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MATH_Free_1d
</UL>

<P><STRONG><a name="[22d]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Alloc_2d
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mem_Alloc_1d
</UL>

<P><STRONG><a name="[28d]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[282]"></a>sqrtf</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asinf
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[64]"></a>SetSysClock</STRONG> (Thumb, 218 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[75]"></a>TI4_Config</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[73]"></a>TI3_Config</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[71]"></a>TI2_Config</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[6f]"></a>TI1_Config</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[c6]"></a>U2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = U2
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;input_ubx
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
</UL>

<P><STRONG><a name="[b6]"></a>U4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navclock
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navcov
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navsat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navgpstime
</UL>

<P><STRONG><a name="[b8]"></a>I2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navsat
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navgpstime
</UL>

<P><STRONG><a name="[b7]"></a>I4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ubx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navpvt
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navclock
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navgpstime
</UL>

<P><STRONG><a name="[bf]"></a>R4</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ubx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = R4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_navcov
</UL>

<P><STRONG><a name="[d2]"></a>R8</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, ubx.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decode_rxmrawx
</UL>

<P><STRONG><a name="[e4]"></a>Delay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>prvSetupHardware</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvSetupHardware &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f5]"></a>Sensor_Conditioning_DownSampling</STRONG> (Thumb, 1390 bytes, Stack size 96 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Sensor_Conditioning_DownSampling &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Msg_Get_ExternalDRSensor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataHandler_main
</UL>

<P><STRONG><a name="[f9]"></a>pbDR_Sorting_DRData</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, pbdrctrlmgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pbDR_Sorting_DRData
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbDR_Push_DataBuffer
</UL>

<P><STRONG><a name="[130]"></a>invalid_magnetic_field</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bmi160.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = invalid_magnetic_field
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_measure_xyz_data
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_fifo_xyz_data
</UL>

<P><STRONG><a name="[12c]"></a>xy1y2_to_xyz</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bmi160.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_measure_xyz_data
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bmi160_bst_yamaha_yas537_fifo_xyz_data
</UL>

<P><STRONG><a name="[1b0]"></a>BSP_Uart2_RdByteUnlocked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usart2.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_RdByte
</UL>

<P><STRONG><a name="[1b1]"></a>BSP_Uart2_WrByteUnlocked</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, usart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_Uart2_WrByteUnlocked &rArr; delayMs &rArr; delayUs
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrByte
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_WrStr
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart2_SendCommand
</UL>

<P><STRONG><a name="[1b8]"></a>BSP_Uart3_RdByteUnlocked</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_RdByte
</UL>

<P><STRONG><a name="[1b9]"></a>BSP_Uart3_WrByteUnlocked</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usart3.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_SendCommand
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Uart3_WrByte
</UL>

<P><STRONG><a name="[215]"></a>pb_Navigation</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pb_mainctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = pb_Navigation &rArr; pb_DR_Navigation &rArr; pb_DR_Solution &rArr; pb_DR_LooseFilter_Update &rArr; pb_Geo2ECEF &rArr; pb_Ellipsoid_Radius &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_UpateNav_Time
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Posterior_Check
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_OutputState
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Post_NavSolution
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Navigation
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_ContextModeDetection
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Distance_Update
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_Age_States
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pb_DR_Main
</UL>

<P><STRONG><a name="[28f]"></a>_fp_digits</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[27d]"></a>_printf_core</STRONG> (Thumb, 1762 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf
</UL>

<P><STRONG><a name="[291]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[290]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[60]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0snprintf)
</UL>
<P><STRONG><a name="[61]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
